import { useState } from "react";
import { Trophy, Star, Zap, Crown, Medal, Award, TrendingUp, Gift } from "lucide-react";
import { Card } from "./ui/card";
import { Progress } from "./ui/progress";
import { Badge } from "./ui/badge";
import { Button } from "./ui/button";

interface Level {
  level: number;
  title: string;
  xpRequired: number;
  xpCurrent: number;
  rewards: string[];
  unlocked: boolean;
  icon: React.ReactNode;
}

interface Achievement {
  id: string;
  title: string;
  description: string;
  icon: string;
  xp: number;
  unlocked: boolean;
  rarity: 'common' | 'rare' | 'epic' | 'legendary';
}

export function LevelsXP() {
  const [showLevelUp, setShowLevelUp] = useState(false);

  const currentLevel = 12;
  const currentXP = 2840;
  const nextLevelXP = 3200;
  const progressPercentage = ((currentXP % 400) / 400) * 100;

  const levels: Level[] = [
    {
      level: 1,
      title: "–®–∏–Ω—ç –æ—é—É—Ç–∞–Ω",
      xpRequired: 0,
      xpCurrent: 400,
      rewards: ["–ê–Ω—Ö–Ω—ã –±–∞–≥–∞–∂", "–°—É—Ä–≥–∞–ª—Ç—ã–Ω –º–∞—Ç–µ—Ä–∏–∞–ª"],
      unlocked: true,
      icon: <Star className="w-6 h-6" />
    },
    {
      level: 5,
      title: "–•–∏—á—ç—ç–ª—á",
      xpRequired: 1600,
      xpCurrent: 1600,
      rewards: ["–¢—É—Å–≥–∞–π —É—Ä–∞–º—à—É—É–ª–∞–ª", "–ù—ç–º—ç–ª—Ç XP +10%"],
      unlocked: true,
      icon: <Medal className="w-6 h-6" />
    },
    {
      level: 10,
      title: "–ú—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω",
      xpRequired: 3600,
      xpCurrent: 3600,
      rewards: ["AI –±–∞–≥—à–∏–π–Ω –Ω—ç–º—ç–ª—Ç —á–∞–¥–≤–∞—Ä", "–¢—É—Å–≥–∞–π —Å–æ—Ä–∏–ª—É—É–¥"],
      unlocked: true,
      icon: <Award className="w-6 h-6" />
    },
    {
      level: 12,
      title: "–ú–∞—Å—Ç–µ—Ä",
      xpRequired: 4400,
      xpCurrent: 2840,
      rewards: ["–≠–∫—Å–∫–ª—é–∑–∏–≤ –∫–æ–Ω—Ç–µ–Ω—Ç", "–ë–∞–≥—à–∏–π–Ω —ç—Ä—Ö"],
      unlocked: false,
      icon: <Trophy className="w-6 h-6" />
    },
    {
      level: 15,
      title: "–£—Ö–∞–∞–Ω—Ç–∞–Ω",
      xpRequired: 5600,
      xpCurrent: 0,
      rewards: ["–°—É–¥–∞–ª–≥–∞–∞–Ω—ã –±–æ–ª–æ–º–∂", "–®–∏–Ω—ç —Ö–∏—á—ç—ç–ª“Ø“Ø–¥"],
      unlocked: false,
      icon: <Crown className="w-6 h-6" />
    },
    {
      level: 20,
      title: "–ì—Ä–∞–Ω–¥ –ú–∞—Å—Ç–µ—Ä",
      xpRequired: 8000,
      xpCurrent: 0,
      rewards: ["–¢—ç—Ä–≥“Ø“Ø–ª—ç–≥—á–∏–π–Ω —ç—Ä—Ö", "–ë“Ø—Ö –∫–æ–Ω—Ç–µ–Ω—Ç –Ω—ç—ç–≥–¥—ç–Ω—ç"],
      unlocked: false,
      icon: <Crown className="w-6 h-6" />
    }
  ];

  const achievements: Achievement[] = [
    {
      id: "first_quiz",
      title: "–ê–Ω—Ö–Ω—ã –∞–ª—Ö–∞–º",
      description: "–ê–Ω—Ö–Ω—ã —Å–æ—Ä–∏–ª—ã–≥ –∞–º–∂–∏–ª—Ç—Ç–∞–π –¥—É—É—Å–≥–∞—Å–∞–Ω",
      icon: "üéØ",
      xp: 50,
      unlocked: true,
      rarity: "common"
    },
    {
      id: "week_streak",
      title: "–¢—ç—Ä–≥“Ø“Ø–Ω –æ—é—É—Ç–∞–Ω",
      description: "7 —Ö–æ–Ω–æ–≥ –¥–∞—Ä–∞–∞–ª–∞–Ω —Å–æ—Ä–∏–ª–¥ –æ—Ä–æ–ª—Ü—Å–æ–Ω",
      icon: "üèÜ",
      xp: 200,
      unlocked: true,
      rarity: "rare"
    },
    {
      id: "math_master",
      title: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫—á",
      description: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∏–π–Ω 50 –±–æ–¥–ª–æ–≥–æ —à–∏–π–¥—Å—ç–Ω",
      icon: "üßÆ",
      xp: 300,
      unlocked: true,
      rarity: "epic"
    },
    {
      id: "perfect_score",
      title: "–¢”©–≥—Å –æ–Ω–æ–æ",
      description: "–°–æ—Ä–∏–ª–¥ 100% –æ–Ω–æ–æ –∞–≤—Å–∞–Ω",
      icon: "‚≠ê",
      xp: 150,
      unlocked: true,
      rarity: "rare"
    },
    {
      id: "speed_demon",
      title: "–•—É—Ä–¥–∞–Ω —É—Ö–∞–∞–Ω—Ç–∞–Ω",
      description: "–°–æ—Ä–∏–ª—ã–≥ 2 –º–∏–Ω—É—Ç –¥–æ—Ç–æ—Ä –¥—É—É—Å–≥–∞—Å–∞–Ω",
      icon: "‚ö°",
      xp: 100,
      unlocked: false,
      rarity: "epic"
    },
    {
      id: "month_active",
      title: "–ò–¥—ç–≤—Ö—Ç—ç–Ω",
      description: "30 —Ö–æ–Ω–æ–≥ –¥–∞—Ä–∞–∞–ª–∞–Ω –æ—Ä–∂ –∏—Ä—Å—ç–Ω",
      icon: "üî•",
      xp: 500,
      unlocked: true,
      rarity: "legendary"
    },
    {
      id: "ai_helper",
      title: "AI –Ω–∞–π–∑",
      description: "AI –±–∞–≥—à—Ç–∞–π 100 —É–¥–∞–∞ —Ö–∞—Ä–∏–ª—Ü—Å–∞–Ω",
      icon: "ü§ñ",
      xp: 250,
      unlocked: false,
      rarity: "epic"
    },
    {
      id: "knowledge_seeker",
      title: "–ú—ç–¥–ª—ç–≥–∏–π–Ω —ç—Ä—ç–ª—Ç—ç–Ω",
      description: "–ë“Ø—Ö —Ö–∏—á—ç—ç–ª—ç—ç—Å —Å–æ—Ä–∏–ª–¥ –æ—Ä–æ–ª—Ü—Å–æ–Ω",
      icon: "üìö",
      xp: 400,
      unlocked: false,
      rarity: "legendary"
    }
  ];

  const getRarityColor = (rarity: string) => {
    switch (rarity) {
      case 'common': return 'text-gray-400 border-gray-400/20 bg-gray-400/10';
      case 'rare': return 'text-blue-400 border-blue-400/20 bg-blue-400/10';
      case 'epic': return 'text-purple-400 border-purple-400/20 bg-purple-400/10';
      case 'legendary': return 'text-orange-400 border-orange-400/20 bg-orange-400/10';
      default: return 'text-gray-400 border-gray-400/20 bg-gray-400/10';
    }
  };

  const simulateLevelUp = () => {
    setShowLevelUp(true);
    setTimeout(() => setShowLevelUp(false), 3000);
  };

  return (
    <div className="p-6 space-y-6">
      {/* Level Up Animation */}
      {showLevelUp && (
        <div className="fixed inset-0 bg-background/90 backdrop-blur-sm z-50 flex items-center justify-center">
          <Card className="p-8 text-center glass-morphism gradient-border max-w-md mx-4">
            <div className="mb-6">
              <Trophy className="w-16 h-16 text-primary mx-auto mb-4 float-animation" />
              <h1 className="text-3xl font-bold text-primary mb-2">–¢“Ø–≤—à–∏–Ω –∞—Ö–∏–ª–∞–∞!</h1>
              <p className="text-xl text-foreground">–¢“Ø–≤—à–∏–Ω {currentLevel + 1} - –ú–∞—Å—Ç–µ—Ä</p>
            </div>
            <div className="space-y-3">
              <div className="flex items-center justify-center gap-2 text-green-400">
                <Gift className="w-5 h-5" />
                <span className="font-semibold">–®–∏–Ω—ç —É—Ä–∞–º—à—É—É–ª–∞–ª –æ–ª–∂ –∞–≤–ª–∞–∞!</span>
              </div>
              <p className="text-sm text-muted-foreground">–≠–∫—Å–∫–ª—é–∑–∏–≤ –∫–æ–Ω—Ç–µ–Ω—Ç, –ë–∞–≥—à–∏–π–Ω —ç—Ä—Ö</p>
            </div>
          </Card>
        </div>
      )}

      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">–¢“Ø–≤—à–∏–Ω & XP –°–∏—Å—Ç–µ–º</h1>
          <p className="text-muted-foreground">–¢–∞–Ω—ã –∞—Ö–∏—Ü –¥—ç–≤—à–∏–ª –±–∞ –∞–º–∂–∏–ª—Ç—É—É–¥</p>
        </div>
        <Button onClick={simulateLevelUp} variant="outline" className="glow-effect">
          <Zap className="w-4 h-4 mr-2" />
          –¢“Ø–≤—à–∏–Ω –∞—Ö–∏—Ö –¥—ç–º–æ
        </Button>
      </div>

      {/* Current Level Status */}
      <Card className="p-6 glass-morphism gradient-border">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 rounded-full bg-primary flex items-center justify-center glow-effect">
              <Trophy className="w-8 h-8 text-primary-foreground" />
            </div>
            <div>
              <h2 className="text-2xl font-bold text-primary">–¢“Ø–≤—à–∏–Ω {currentLevel}</h2>
              <p className="text-muted-foreground">–ú–∞—Å—Ç–µ—Ä</p>
            </div>
          </div>
          <div className="text-right">
            <p className="text-3xl font-bold text-primary">{currentXP.toLocaleString()} XP</p>
            <p className="text-sm text-muted-foreground">
              –î–∞—Ä–∞–∞–≥–∏–π–Ω —Ç“Ø–≤—à–∏–Ω —Ö“Ø—Ä—Ç—ç–ª: {(nextLevelXP - currentXP).toLocaleString()} XP
            </p>
          </div>
        </div>
        
        <div className="space-y-2">
          <div className="flex justify-between items-center">
            <span className="text-sm text-muted-foreground">–¢“Ø–≤—à–∏–Ω {currentLevel + 1} —Ö“Ø—Ä—Ç—ç–ª—Ö –∞—Ö–∏—Ü</span>
            <span className="text-sm font-semibold text-primary">{Math.round(progressPercentage)}%</span>
          </div>
          <Progress value={progressPercentage} className="h-4 glow-effect" />
        </div>
      </Card>

      {/* Levels Roadmap */}
      <Card className="p-6 glass-morphism">
        <h3 className="text-xl font-semibold mb-6 flex items-center gap-2">
          <TrendingUp className="w-5 h-5 text-primary" />
          –¢“Ø–≤—à–∏–Ω–≥–∏–π–Ω –∑–∞–º
        </h3>
        
        <div className="space-y-4">
          {levels.map((level, index) => (
            <div 
              key={level.level}
              className={`p-4 rounded-lg border transition-all duration-300 ${
                level.level === currentLevel
                  ? 'border-primary bg-primary/10 glow-effect'
                  : level.unlocked
                    ? 'border-green-500/20 bg-green-500/5'
                    : 'border-border bg-card/50 opacity-75'
              }`}
            >
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-4">
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center ${
                    level.level === currentLevel
                      ? 'bg-primary text-primary-foreground'
                      : level.unlocked
                        ? 'bg-green-500 text-white'
                        : 'bg-muted text-muted-foreground'
                  }`}>
                    {level.icon}
                  </div>
                  <div>
                    <h4 className="font-semibold">–¢“Ø–≤—à–∏–Ω {level.level} - {level.title}</h4>
                    <p className="text-sm text-muted-foreground">
                      {level.xpRequired.toLocaleString()} XP —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π
                    </p>
                  </div>
                </div>
                <div className="text-right">
                  <Badge 
                    variant={level.unlocked ? "default" : "secondary"}
                    className={level.unlocked ? "bg-green-500" : ""}
                  >
                    {level.unlocked ? '–ù—ç—ç–≥–¥—Å—ç–Ω' : '–¢“Ø–≥–∂—ç—ç—Ç—ç–π'}
                  </Badge>
                  {level.level === currentLevel && (
                    <p className="text-sm text-primary mt-1">–û–¥–æ–æ–≥–∏–π–Ω —Ç“Ø–≤—à–∏–Ω</p>
                  )}
                </div>
              </div>
              
              {level.rewards.length > 0 && (
                <div className="mt-3 pt-3 border-t border-border">
                  <p className="text-sm font-medium text-muted-foreground mb-2">–£—Ä–∞–º—à—É—É–ª–∞–ª:</p>
                  <div className="flex flex-wrap gap-2">
                    {level.rewards.map((reward, idx) => (
                      <Badge key={idx} variant="outline" className="text-xs">
                        {reward}
                      </Badge>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      </Card>

      {/* Achievements */}
      <Card className="p-6 glass-morphism">
        <h3 className="text-xl font-semibold mb-6 flex items-center gap-2">
          <Award className="w-5 h-5 text-primary" />
          –ê–º–∂–∏–ª—Ç—É—É–¥
          <Badge variant="secondary" className="ml-2">
            {achievements.filter(a => a.unlocked).length}/{achievements.length}
          </Badge>
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {achievements.map((achievement) => (
            <div 
              key={achievement.id}
              className={`p-4 rounded-lg border transition-all duration-300 hover:scale-105 ${
                achievement.unlocked
                  ? `${getRarityColor(achievement.rarity)} hover:border-opacity-40`
                  : 'border-border bg-card/30 opacity-50 grayscale'
              }`}
            >
              <div className="text-center">
                <div className="text-3xl mb-3">{achievement.icon}</div>
                <h4 className="font-semibold mb-1">{achievement.title}</h4>
                <p className="text-xs text-muted-foreground mb-3 leading-relaxed">
                  {achievement.description}
                </p>
                
                <div className="flex items-center justify-between">
                  <Badge 
                    variant="outline" 
                    className={`text-xs ${getRarityColor(achievement.rarity)}`}
                  >
                    {achievement.rarity}
                  </Badge>
                  <div className="flex items-center gap-1 text-xs">
                    <Zap className="w-3 h-3 text-primary" />
                    <span className="text-primary font-medium">+{achievement.xp}</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </Card>

      {/* XP Sources */}
      <Card className="p-6 glass-morphism">
        <h3 className="text-xl font-semibold mb-6 flex items-center gap-2">
          <Zap className="w-5 h-5 text-primary" />
          XP –æ–ª–æ—Ö –∞—Ä–≥—É—É–¥
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <div className="p-4 rounded-lg bg-gradient-to-br from-blue-500/10 to-blue-500/5 border border-blue-500/20">
            <h4 className="font-semibold text-blue-400 mb-2">”®–¥—Ä–∏–π–Ω —Å–æ—Ä–∏–ª</h4>
            <p className="text-sm text-muted-foreground mb-2">”®–¥”©—Ä –±“Ø—Ä —à–∏–Ω—ç —Å–æ—Ä–∏–ª—É—É–¥ —à–∏–π–¥—ç—Ö</p>
            <div className="flex items-center gap-1 text-blue-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">20-60 XP</span>
            </div>
          </div>
          
          <div className="p-4 rounded-lg bg-gradient-to-br from-green-500/10 to-green-500/5 border border-green-500/20">
            <h4 className="font-semibold text-green-400 mb-2">AI –±–∞–≥—à—Ç–∞–π —è—Ä–∏–ª—Ü–∞—Ö</h4>
            <p className="text-sm text-muted-foreground mb-2">–ê—Å—É—É–ª—Ç –∞—Å—É—É–∂, —Ö–∞—Ä–∏—É–ª—Ç –∞–≤–∞—Ö</p>
            <div className="flex items-center gap-1 text-green-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">5-15 XP</span>
            </div>
          </div>
          
          <div className="p-4 rounded-lg bg-gradient-to-br from-purple-500/10 to-purple-500/5 border border-purple-500/20">
            <h4 className="font-semibold text-purple-400 mb-2">–ê–º–∂–∏–ª—Ç –æ–ª–∂ –∞–≤–∞—Ö</h4>
            <p className="text-sm text-muted-foreground mb-2">–¢—É—Å–≥–∞–π –¥–∞–∞–ª–≥–∞–≤–∞—Ä –±–∏–µ–ª“Ø“Ø–ª—ç—Ö</p>
            <div className="flex items-center gap-1 text-purple-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">50-500 XP</span>
            </div>
          </div>
          
          <div className="p-4 rounded-lg bg-gradient-to-br from-orange-500/10 to-orange-500/5 border border-orange-500/20">
            <h4 className="font-semibold text-orange-400 mb-2">”®–¥”©—Ä —Ç—É—Ç–º—ã–Ω –∑–æ—Ä–∏–ª–≥–æ</h4>
            <p className="text-sm text-muted-foreground mb-2">”®–¥—Ä–∏–π–Ω –¥–∞–∞–ª–≥–∞–≤–∞—Ä –±–∏–µ–ª“Ø“Ø–ª—ç—Ö</p>
            <div className="flex items-center gap-1 text-orange-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">30-100 XP</span>
            </div>
          </div>
          
          <div className="p-4 rounded-lg bg-gradient-to-br from-red-500/10 to-red-500/5 border border-red-500/20">
            <h4 className="font-semibold text-red-400 mb-2">–°–æ—Ä–∏–ª—ã–Ω –∑”©–≤ —Ö–∞—Ä–∏—É–ª—Ç</h4>
            <p className="text-sm text-muted-foreground mb-2">–ê—Å—É—É–ª—Ç–∞–¥ –∑”©–≤ —Ö–∞—Ä–∏—É–ª–∞—Ö</p>
            <div className="flex items-center gap-1 text-red-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">10-25 XP</span>
            </div>
          </div>
          
          <div className="p-4 rounded-lg bg-gradient-to-br from-teal-500/10 to-teal-500/5 border border-teal-500/20">
            <h4 className="font-semibold text-teal-400 mb-2">–î–∞—Ä–∞–∞–ª—Å–∞–Ω ”©–¥—Ä“Ø“Ø–¥</h4>
            <p className="text-sm text-muted-foreground mb-2">”®–¥”©—Ä —Ç—É—Ç–∞–º –æ—Ä–∂ –∏—Ä—ç—Ö</p>
            <div className="flex items-center gap-1 text-teal-400">
              <Zap className="w-4 h-4" />
              <span className="font-medium">10-50 XP</span>
            </div>
          </div>
        </div>
      </Card>
    </div>
  );
}